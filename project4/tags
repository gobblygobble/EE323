%.o	Makefile	/^%.o: %.cpp$/
%.o	Makefile	/^%.o: %.c$/
.PHONY	Makefile	/^.PHONY: clean all rebuild$/
ACK	transport.c	48
ANY_EVENT	stcp_api.h	20
APP_CLOSE_REQUESTED	stcp_api.h	19
APP_DATA	stcp_api.h	17
APP_SRCS	Makefile	/^APP_SRCS = echo_server_main.c echo_client_main.c s/
AR	Makefile	/^AR=ar crus$/
ARRAY_DIM	mysock_impl.h	/^#define ARRAY_DIM(a) (sizeof(a) \/ sizeof(a[0]))$/
ASSERT_VALID_MYSOCKET_DESCRIPTOR	mysock.c	/^    #define ASSERT_VALID_MYSOCKET_DESCRIPTOR(ctx, /
ASSERT_VALID_MYSOCKET_DESCRIPTOR	mysock.c	/^    #define ASSERT_VALID_MYSOCKET_DESCRIPTOR(ctx, /
BINARIES	Makefile	/^BINARIES = client server stcp_echo_client stcp_ech/
CC	Makefile	/^CC=gcc$/
CFLAGS	Makefile	/^CFLAGS=-g -D$(ENV) -D_REENTRANT $(ENVCFLAGS) -Wall/
CSTATE_CLOSED	transport.c	43
CSTATE_CLOSE_WAIT	transport.c	41
CSTATE_CLOSING	transport.c	39
CSTATE_ESTABLISHED	transport.c	32
CSTATE_FIN_WAIT1	transport.c	37
CSTATE_FIN_WAIT2	transport.c	38
CSTATE_LAST_ACK	transport.c	42
CSTATE_LISTEN	transport.c	33
CSTATE_SYN_RCVD	transport.c	35
CSTATE_SYN_SENT	transport.c	34
CreatePacket	transport.c	/^CreatePacket(tcp_seq seqnum, tcp_seq acknum, Packe/
DATA	transport.c	50
DEBUG_CONNECTION_MSG	connection_demux.c	/^#define DEBUG_CONNECTION_MSG(msg, reason) \\$/
DEBUG_CONNECTION_MSG	connection_demux.c	256
DEBUG_LOG	mysock_impl.h	/^    #define DEBUG_LOG(args) { printf args; fflush(/
DEBUG_LOG	mysock_impl.h	/^    #define DEBUG_LOG(args)$/
DEBUG_PEER	network_io_socket.h	/^#define DEBUG_PEER(ctx) \\$/
DEBUG_PEER	network_io_socket.h	/^#define DEBUG_PEER(ctx)$/
DEPEND_SRCS	Makefile	/^DEPEND_SRCS = $(SRCS) $(APP_SRCS)$/
ECHO_CLIENT_OBJS	Makefile	/^ECHO_CLIENT_OBJS=echo_client_main.o $(OBJS_VNS)$/
ECHO_SERVER_OBJS	Makefile	/^ECHO_SERVER_OBJS=echo_server_main.o $(OBJS_VNS)$/
EXIT_PIPE_READ_INDEX	network_io_socket.c	29
EXIT_PIPE_WRITE_INDEX	network_io_socket.c	30
FALSE	mysock.h	19
FIN	transport.c	51
FINACK	transport.c	52
GET_SOCKET	network_io_socket.h	/^#define GET_SOCKET(ctx) ((network_context_socket_t/
HASH_DEFAULT_HASH_FN	mysock_hash.h	/^#define HASH_DEFAULT_HASH_FN(key,size)  ((key) % (/
HASH_DEFAULT_KEY_EQUALS	mysock_hash.h	/^#define HASH_DEFAULT_KEY_EQUALS(a,b)    ((a) == (b/
HASH_DELETE	mysock_hash.h	/^#define HASH_DELETE(tbl,key)            _hash_dele/
HASH_ENTRY_EXISTS	mysock_hash.h	/^#define HASH_ENTRY_EXISTS(tbl,key)      _hash_entr/
HASH_INSERT	mysock_hash.h	/^#define HASH_INSERT(tbl,key,entry)      _hash_inse/
HASH_LOOKUP	mysock_hash.h	/^#define HASH_LOOKUP(tbl,key)            _hash_look/
HASH_LOOKUP_PTR	mysock_hash.h	/^#define HASH_LOOKUP_PTR(tbl,key)        _hash_look/
HASH_SET_ENTRY	mysock_hash.h	/^#define HASH_SET_ENTRY(tbl,key,entry)   _hash_set_/
HASH_TABLE_DECLARE	mysock_hash.h	/^#define HASH_TABLE_DECLARE(tbl,keytype,datatype,si/
HASH_TABLE_DECLARE_EXTENDED	mysock_hash.h	/^#define HASH_TABLE_DECLARE_EXTENDED(tbl,keytype,da/
INLINE	mysock_impl.h	19
INLINE	mysock_impl.h	21
INVALIDATE_CONNECT_REQUEST	connection_demux.c	/^#define INVALIDATE_CONNECT_REQUEST(r) \\$/
LIBS	Makefile	/^LIBS=$(ENVLIBS)$/
LN	Makefile	/^LN=ln$/
MAKEFILE	Makefile	/^MAKEFILE=Makefile$/
MAX	transport.h	/^    #define MAX(x,y)  ((x) >= (y) ? (x) : (y))$/
MAXHOSTNAMELEN	network_io_socket.c	34
MAXHOSTNAMELEN	network_io_socket.c	36
MAX_HOSTNAMELEN	server.c	284
MAX_IP_PAYLOAD_LEN	network_io.h	14
MAX_NUM_CONNECTIONS	mysock.h	31
MAX_NUM_PENDING_CONNECTIONS	network_io_tcp.c	16
MIN	client.c	/^#define MIN(a,b) ((a) < (b) ? (a) : (b))$/
MIN	mysock_impl.h	/^    #define MIN(a,b)    ((a) < (b) ? (a) : (b))$/
MIN	transport.h	/^    #define MIN(x,y)  ((x) <= (y) ? (x) : (y))$/
MYSOCK_CHECK	mysock_api.c	/^#define MYSOCK_CHECK(cond,rc)   { if (!(cond)) MYS/
MYSOCK_ERROR_EXIT	mysock_api.c	/^#define MYSOCK_ERROR_EXIT(rc) { errno = rc; return/
Mclient	client.c	/^main(int argc, char *argv[])$/
Mgenerate_long_txt_files	generate_long_txt_files.c	/^int main(int argc, char* argv[]) {$/
Mserver	server.c	/^main(int argc, char *argv[])$/
NETWORK_DATA	stcp_api.h	18
OBJS	Makefile	/^OBJS = $(OBJS_MYSOCK) $(OBJS_IO)$/
OBJS_IO	Makefile	/^OBJS_IO = $(SRCS_IO:.c=.o)$/
OBJS_MYSOCK	Makefile	/^OBJS_MYSOCK = $(SRCS_MYSOCK:.c=.o)$/
OSTYPE	ENVCFG.MK	6
OSTYPE	ENVCFG.MK~	6
PTHREAD_CALL	mysock_impl.h	/^#define PTHREAD_CALL(rc) _pthread_call(rc)$/
PacketType	transport.c	46
PacketType	transport.c	54
PrintPacket	transport.c	/^void PrintPacket(STCPHeader *packet, bool isSend)$/
RCVD_FILENAME	client.c	33
RM	Makefile	/^RM=rm$/
SRCS	Makefile	/^SRCS = $(SRCS_MYSOCK) $(SRCS_IO)$/
SRCS_IO	Makefile	/^SRCS_IO = network_io_tcp.c network_io_socket.c$/
SRCS_MYSOCK	Makefile	/^SRCS_MYSOCK = transport.c mysock_api.c stcp_api.c /
SR_EXE	Makefile	/^SR_EXE = sr$/
SR_SRC	Makefile	/^SR_SRC = sr_src$/
STCP	README	/^Assignment #4: STCP (Simple TCP)$/
STCPHeader	transport.h	67
STCP_MSS	transport.h	77
SYN	transport.c	47
SYNACK	transport.c	49
SendPacket	transport.c	/^SendPacket(mysocket_t sd, context_t* ctx, PacketTy/
TCP_DATA_START	transport.h	/^#define TCP_DATA_START(p) (((STCPHeader *) p)->th_/
TCP_OPTIONS_LEN	transport.h	/^#define TCP_OPTIONS_LEN(p) (TCP_DATA_START(p) - si/
TH_ACK	transport.h	62
TH_FIN	transport.h	58
TH_PUSH	transport.h	61
TH_RST	transport.h	60
TH_SYN	transport.h	59
TH_URG	transport.h	63
TIMEOUT	stcp_api.h	16
TRUE	mysock.h	23
VERIFY_SOCKET	network_io_socket.h	/^#define VERIFY_SOCKET(ctx) assert(ctx->impl_data &/
WINDOW_SIZE	transport.c	27
WaitPacket	transport.c	/^WaitPacket(mysocket_t sd, context_t *ctx, PacketTy/
__BIG_ENDIAN	transport.h	30
__BYTE_ORDER	transport.h	31
__CONNECTION_DEMUX_H__	connection_demux.h	6
__LITTLE_ENDIAN	transport.h	29
__MYSOCK_HASH_H__	mysock_hash.h	6
__MYSOCK_H__	mysock.h	4
__MYSOCK_INTERNAL_H__	mysock_impl.h	7
__NETWORK_H__	network.h	6
__NETWORK_IO_H__	network_io.h	7
__NETWORK_IO_SOCKET_H__	network_io_socket.h	7
__STCP_API_H__	stcp_api.h	7
__TCP_CHECKSUM_H__	tcp_sum.h	4
__TRANSPORT_H__	transport.h	4
_debug_print_connection	connection_demux.c	/^static void _debug_print_connection(const char *ms/
_get_connection_queue	connection_demux.c	/^static listen_queue_t *_get_connection_queue(mysoc/
_mysock_allocate_context	mysock.c	/^static mysock_context_t *_mysock_allocate_context(/
_mysock_bind_ephemeral	mysock.c	/^int _mysock_bind_ephemeral(mysock_context_t *ctx)$/
_mysock_close_passive_socket	connection_demux.c	/^void _mysock_close_passive_socket(mysock_context_t/
_mysock_create_thread	mysock.c	/^pthread_t _mysock_create_thread(void *(*start)(voi/
_mysock_dequeue_buffer	mysock.c	/^size_t _mysock_dequeue_buffer(mysock_context_t *ct/
_mysock_dequeue_connection	connection_demux.c	/^void _mysock_dequeue_connection(mysock_context_t  /
_mysock_enqueue_buffer	mysock.c	/^void _mysock_enqueue_buffer(mysock_context_t *ctx,/
_mysock_enqueue_connection	connection_demux.c	/^bool_t _mysock_enqueue_connection(mysock_context_t/
_mysock_free_context	mysock.c	/^void _mysock_free_context(mysock_context_t *ctx)$/
_mysock_free_queue	mysock.c	/^static bool_t _mysock_free_queue(mysock_context_t /
_mysock_get_context	mysock.c	/^mysock_context_t *_mysock_get_context(mysocket_t s/
_mysock_new_mysocket	mysock.c	/^mysocket_t _mysock_new_mysocket(bool_t is_reliable/
_mysock_passive_connection_complete	connection_demux.c	/^void _mysock_passive_connection_complete(mysock_co/
_mysock_set_backlog	connection_demux.c	/^void _mysock_set_backlog(mysock_context_t *ctx, un/
_mysock_set_checksum	tcp_sum.c	/^void _mysock_set_checksum(const mysock_context_t */
_mysock_tcp_checksum	tcp_sum.c	/^uint16_t _mysock_tcp_checksum(uint32_t src_addr \/*/
_mysock_transport_init	mysock.c	/^void _mysock_transport_init(mysocket_t sd, bool_t /
_mysock_verify_checksum	tcp_sum.c	/^bool_t _mysock_verify_checksum(const mysock_contex/
_mysock_wait_for_connection	mysock.c	/^int _mysock_wait_for_connection(mysock_context_t */
_network_alloc_context_socket	network_io_socket.c	/^_network_alloc_context_socket(int socket_type, siz/
_network_bind	network_io_tcp.c	/^int _network_bind(network_context_t *ctx, struct s/
_network_bind_socket	network_io_socket.c	/^int _network_bind_socket(network_context_t *ctx,$/
_network_close	network_io_tcp.c	/^void _network_close(network_context_t *ctx)$/
_network_close_socket	network_io_socket.c	/^void _network_close_socket(network_context_t *ctx)/
_network_destroy_context_socket	network_io_socket.c	/^static void _network_destroy_context_socket(networ/
_network_get_interface_ip	network_io_socket.c	/^uint32_t _network_get_interface_ip(uint32_t peer_a/
_network_get_local_addr	network_io.c	/^uint32_t _network_get_local_addr(network_context_t/
_network_get_port	network_io_socket.c	/^int _network_get_port(network_context_t *ctx)$/
_network_init	network_io_tcp.c	/^int _network_init(mysock_context_t *sock_ctx, netw/
_network_init_socket	network_io_socket.c	/^int _network_init_socket(mysock_context_t  *sock_c/
_network_listen	network_io_tcp.c	/^int _network_listen(network_context_t *ctx, int ba/
_network_recv	network.c	/^int _network_recv(mysocket_t sd, void *dst, size_t/
_network_recv_packet	network_io_tcp.c	/^ssize_t _network_recv_packet(network_context_t *ct/
_network_send	network.c	/^int _network_send(mysocket_t sd, const void *buf, /
_network_send_packet	network_io_tcp.c	/^ssize_t _network_send_packet(network_context_t *ct/
_network_start_recv_thread	network_io_socket.c	/^int _network_start_recv_thread(mysock_context_t *c/
_network_stop_recv_thread	network_io_socket.c	/^void _network_stop_recv_thread(mysock_context_t *c/
_network_update_passive_state	network_io_tcp.c	/^void _network_update_passive_state(network_context/
_pthread_call	mysock_impl.h	/^static INLINE void _pthread_call(int pthread_retva/
_tcp_connect	network_io_tcp.c	/^static int _tcp_connect(network_context_t *ctx)$/
_tcp_io	network_io_tcp.c	/^static int _tcp_io(socket_t tcp_sd, void *buf, siz/
all	Makefile	/^all: client server$/
app_recv_queue	mysock_impl.h	114
app_send_queue	mysock_impl.h	113
base	network_io_socket.h	35
blocking	mysock_impl.h	94
blocking_cond	mysock_impl.h	92
blocking_lock	mysock_impl.h	93
bool_t	mysock.h	26
bound	mysock_impl.h	80
clean	Makefile	/^clean:$/
client	Makefile	/^client: client.o $(OBJS)$/
client.o	Makefile	/^client.o: client.c mysock.h$/
close_requested	mysock_impl.h	104
closesocket	network_io_socket.h	/^#define closesocket(s) close(s)$/
completed_connect	connection_demux.c	32
completed_connect_t	connection_demux.c	36
completed_queue	connection_demux.c	50
connect_lock	network_io_socket.h	40
connect_request_t	connection_demux.c	29
connected	network_io_socket.h	41
connection_cond	connection_demux.c	51
connection_demux.o	Makefile	/^connection_demux.o: connection_demux.c mysock_impl/
connection_lock	connection_demux.c	52
connection_queue	connection_demux.c	49
connection_state	transport.c	61
context_t	transport.c	83
control_loop	transport.c	/^static void control_loop(mysocket_t sd, context_t /
copied	network_io.h	39
copy_buf_len	network_io.h	41
copy_buffer	network_io.h	40
cur_len	connection_demux.c	43
cwnd	transport.c	78
data	mysock_impl.h	54
data_len	mysock_impl.h	55
data_ready_cond	mysock_impl.h	102
data_ready_lock	mysock_impl.h	103
depend	Makefile	/^depend: dependinit \\$/
depend_%	Makefile	/^depend_%:$/
dependinit	Makefile	/^dependinit:$/
dist	Makefile	/^dist: dist-clean$/
dist-clean	Makefile	/^dist-clean: clean$/
do_connection	server.c	/^static void do_connection(mysocket_t sd)$/
done	transport.c	59
dperror	transport.h	/^    #define dperror(head) \\$/
dperror	transport.h	/^        #define dperror(head)$/
dperror	transport.h	115
dprintf	transport.h	99
dprintf	transport.h	/^        #define dprintf(fmt, ...)$/
dprintf	transport.h	114
dst_addr	tcp_sum.c	22
echo_client_main.o	Makefile	/^echo_client_main.o: echo_client_main.c mysock.h$/
echo_server_main.o	Makefile	/^echo_server_main.o: echo_server_main.c mysock.h$/
eof	mysock_impl.h	105
exit_pipe	network_io_socket.h	28
filename	client.c	40
force	Makefile	/^force:$/
generate_initial_seq_num	transport.c	/^static void generate_initial_seq_num(context_t *ct/
get_nvt_line	client.c	/^get_nvt_line(int sd, char *line)$/
get_nvt_line	server.c	/^get_nvt_line(int sd, char *line)$/
global_ctx	mysock.c	35
head	mysock_impl.h	61
impl_data	network_io.h	35
initial_sequence_num	transport.c	62
io_func_t	network_io_tcp.c	18
is_active	mysock_impl.h	73
is_reliable	network_io.h	23
len	tcp_sum.c	25
listen_lock	connection_demux.c	66
listen_queue_t	connection_demux.c	53
listen_sd	mysock_impl.h	89
listening	mysock_impl.h	81
local_addr	network_io.h	27
local_name	server.c	/^static int local_name(mysocket_t sd, char *name)$/
local_port	connection_demux.c	41
logfile	transport.c	82
loop_until_end	client.c	/^loop_until_end(int sd)$/
max_len	connection_demux.c	42
my_sd	mysock_impl.h	84
myaccept	mysock_api.c	/^mysocket_t myaccept(mysocket_t sd, struct sockaddr/
mybind	mysock_api.c	/^int mybind(mysocket_t sd, struct sockaddr *addr, i/
myclose	mysock_api.c	/^int myclose(mysocket_t sd)$/
myconnect	mysock_api.c	/^int myconnect(mysocket_t sd, struct sockaddr *name/
mygetpeername	mysock_api.c	/^int mygetpeername(mysocket_t sd, struct sockaddr */
mygetsockname	mysock_api.c	/^int mygetsockname(mysocket_t sd, struct sockaddr */
mylisten	mysock_api.c	/^int mylisten(mysocket_t sd, int backlog)$/
mylocalip	mysock_api.c	/^uint32_t mylocalip(uint32_t peer_addr)$/
myread	mysock_api.c	/^int myread(mysocket_t sd, void *buf, size_t buf_le/
mysock.o	Makefile	/^mysock.o: mysock.c mysock.h mysock_impl.h network_/
mysock_api.o	Makefile	/^mysock_api.o: mysock_api.c mysock.h mysock_impl.h /
mysock_context	mysock_impl.h	70
mysock_context_t	mysock_impl.h	115
mysocket	mysock_api.c	/^mysocket_t mysocket(bool_t is_reliable)$/
mysocket_t	mysock.h	27
mywrite	mysock_api.c	/^int mywrite(mysocket_t sd, const void *buf, size_t/
network.o	Makefile	/^network.o: network.c mysock_impl.h mysock.h networ/
network_context_socket_t	network_io_socket.h	29
network_context_socket_tcp_t	network_io_socket.h	42
network_context_socket_udp_t	network_io_socket.h	31
network_context_t	network_io.h	42
network_io.o	Makefile	/^network_io.o: network_io.c mysock_impl.h mysock.h /
network_io_socket.o	Makefile	/^network_io_socket.o: network_io_socket.c mysock_im/
network_io_tcp.o	Makefile	/^network_io_tcp.o: network_io_tcp.c mysock_impl.h m/
network_recv_queue	mysock_impl.h	112
network_recv_thread_func	network_io_socket.c	/^static void *network_recv_thread_func(void *arg_pt/
network_state	mysock_impl.h	79
new_socket	network_io_socket.h	39
next	connection_demux.c	35
next	mysock_impl.h	56
next_seq	transport.c	76
our_dprintf	transport.c	/^void our_dprintf(const char *format,...)$/
packet_queue_node	mysock_impl.h	52
packet_queue_node_t	mysock_impl.h	57
packet_queue_t	mysock_impl.h	63
parse_address	client.c	/^parse_address(char *address, struct sockaddr_in *s/
peer_addr	connection_demux.c	21
peer_addr	network_io.h	30
peer_addr_len	connection_demux.c	22
peer_addr_len	network_io.h	31
peer_addr_valid	network_io.h	32
prev_ack	transport.c	68
prev_len	transport.c	69
prev_seq	transport.c	67
process_line	server.c	/^process_line(int sd, char *line)$/
protocol	tcp_sum.c	24
quiet_opt	client.c	41
random_seed	network_io.h	38
rcvd_ack	transport.c	72
rcvd_len	transport.c	73
rcvd_seq	transport.c	71
rcvd_win	transport.c	74
rebuild	Makefile	/^rebuild: clean all$/
recv_thread	network_io_socket.h	24
recv_thread_started	network_io_socket.h	25
remainder_window	transport.c	80
request	connection_demux.c	34
sd	connection_demux.c	25
server	Makefile	/^server: server.o $(OBJS)$/
server.o	Makefile	/^server.o: server.c mysock.h$/
sock_ctx	network_io_socket.h	38
socket	network_io_socket.h	27
socket_t	network_io_socket.h	17
sr	Makefile	/^sr: force$/
src_addr	tcp_sum.c	21
stcp_api.o	Makefile	/^stcp_api.o: stcp_api.c mysock.h mysock_impl.h netw/
stcp_app_recv	stcp_api.c	/^size_t stcp_app_recv(mysocket_t sd, void *dst, siz/
stcp_app_send	stcp_api.c	/^void stcp_app_send(mysocket_t sd, const void *src,/
stcp_echo_client	Makefile	/^stcp_echo_client: $(ECHO_CLIENT_OBJS) $(VNS_GLUE)$/
stcp_echo_client.purify	Makefile	/^stcp_echo_client.purify: $(ECHO_CLIENT_OBJS) $(VNS/
stcp_echo_server	Makefile	/^stcp_echo_server: $(ECHO_SERVER_OBJS) $(VNS_GLUE)$/
stcp_echo_server.purify	Makefile	/^stcp_echo_server.purify: $(ECHO_SERVER_OBJS) $(VNS/
stcp_errno	mysock_impl.h	95
stcp_event_type_t	stcp_api.h	21
stcp_fin_received	stcp_api.c	/^void stcp_fin_received(mysocket_t sd)$/
stcp_get_context	stcp_api.c	/^void *stcp_get_context(mysocket_t sd)$/
stcp_network_recv	stcp_api.c	/^ssize_t stcp_network_recv(mysocket_t sd, void *dst/
stcp_network_send	stcp_api.c	/^ssize_t stcp_network_send(mysocket_t sd, const voi/
stcp_set_context	stcp_api.c	/^void stcp_set_context(mysocket_t sd, const void *s/
stcp_state	mysock_impl.h	76
stcp_unblock_application	stcp_api.c	/^void stcp_unblock_application(mysocket_t sd)$/
stcp_wait_for_event	stcp_api.c	/^unsigned int stcp_wait_for_event(mysocket_t       /
strerror_r	transport.h	/^        #define strerror_r(num,buf,len) strncpy(bu/
swnd	transport.c	79
tail	mysock_impl.h	62
tcp_seq	transport.h	40
tcp_sum.o	Makefile	/^tcp_sum.o: tcp_sum.c mysock_impl.h mysock.h networ/
tcphdr	transport.h	42
th_ack	transport.h	47
th_dport	transport.h	45
th_flags	transport.h	57
th_off	transport.h	50
th_off	transport.h	52
th_seq	transport.h	46
th_sport	transport.h	44
th_sum	transport.h	65
th_urp	transport.h	66
th_win	transport.h	64
th_x2	transport.h	49
th_x2	transport.h	53
transport.o	Makefile	/^transport.o: transport.c mysock.h stcp_api.h trans/
transport_init	transport.c	/^void transport_init(mysocket_t sd, bool_t is_activ/
transport_thread	mysock_impl.h	98
transport_thread_func	mysock.c	/^static void *transport_thread_func(void *arg_ptr)$/
transport_thread_started	mysock_impl.h	99
usage	client.c	39
usage	server.c	29
user_data	connection_demux.c	28
verify_mysocket_descriptor	mysock.c	/^static void verify_mysocket_descriptor(mysock_cont/
zero	tcp_sum.c	23
